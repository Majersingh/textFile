Pending queue is at maximum capacity for >20 attempts in the last 30 minutes
When the alert happens
Triage
Look at the production logs in Datadog from the time of the incident (Logs, traces and dashboards). You specifically want to check log lines of the form Received 1000 total Apple payments, xxxx eligible Apple payments, completed yy Pending transactions for merchantId=Id(mer_YB1R3WwohY4AJeYG), scope=Test(false).  This log (yy completed transactions) will tell you how quickly the queue is being processed, ideally the value of yy should be greater than 10, indicating the queue is being processed quite quickly.

You should also check the total Pending transaction backlog in Payments index Elasticsearch. To do this run curl 'http://elastic.production.paidy.io.internal:9200/paidypayments_v1/paidypayments/_search?size=1&sort=created_at:asc&q=merchant_id:mer_YB1R3WwohY4AJeYG%20AND%20test:false%20AND%20status:authenticated' | jq .
You are specifically looking for:
expected output  :
{
....
  "hits": {
    "total": 1106, <------- This line
    "max_score": null,
    "hits": [
....
    ]
  }
}














If pending queue size reaches 2000
Run the below scripts : bash ./get-transactions-that-can-be-completed.sh | while read LINE;do ./complete-transactions.sh "$LINE";done


$ cat get-transactions-that-can-be-completed.sh
#!/bin/bash

ELASTICSEARCH_API_ROOT=http://elastic.production.paidy.io.internal:9200
KYC_API_ROOT=http://kyc.production-01.internal:8080

# 10000 authenticated payments, ordered ascending by created_at
APPLE_AUTHENTICATED_LOOKUP_URL="$ELASTICSEARCH_API_ROOT/paidypayments_v1/paidypayments/_search?size=10000&sort=created_at:asc&q=merchant_id:mer_YB1R3WwohY4AJeYG%20AND%20test:false%20AND%20status:authenticated"
APPLE_AUTHENTICATED_LOOKUP_BODY=$(curl -X GET --silent $APPLE_AUTHENTICATED_LOOKUP_URL)

echo $APPLE_AUTHENTICATED_LOOKUP_BODY | jq --raw-output '.hits.hits[]._source | [ .id, .consumer_id, .created_at, .test ] | @csv' | sed -e s/\"//g | tail -n +1001 | head -n -1000 | while read LINE
do
  PAYMENT_ID=$(echo $LINE | awk -F ',' '{print $1}')
  CONSUMER_ID=$(echo $LINE | awk -F ',' '{print $2}')
  CREATED_AT=$(echo $LINE | awk -F ',' '{print $3}')
  SCOPE=$(echo $LINE | awk -F ',' '{print $4}')

  PAIDY_PLUS_FOR_APPLE_STATUS_LOOKUP_URL="$KYC_API_ROOT/kyc/apple/consumer/$CONSUMER_ID/application/status"
  PAIDY_PLUS_FOR_APPLE_STATUS=$(curl -X GET --silent $PAIDY_PLUS_FOR_APPLE_STATUS_LOOKUP_URL | jq --raw-output '.status')

  if [ "$PAIDY_PLUS_FOR_APPLE_STATUS" == "approved" ] || [ "$PAIDY_PLUS_FOR_APPLE_STATUS" == "rejected" ]
  then
    echo $PAYMENT_ID,$SCOPE,$CREATED_AT,$CONSUMER_ID,$PAIDY_PLUS_FOR_APPLE_STATUS
  fi
done





$ cat complete-transactions.sh
#!/bin/bash
# complete-transactions.sh

CORE_APPLE_PAYMENTS_API_ROOT=http://core-apple-payments.production-01.instant.paidy.net:80
MERCHANT_MEMBER_ID=mem_VtTx-S4AAOEKNOYw

LINE=$1

PAYMENT_ID=$(echo $LINE | awk -F ',' '{print $1}')
SCOPE=$(echo $LINE | awk -F ',' '{print $2}')
COMPLETE_URL="$CORE_APPLE_PAYMENTS_API_ROOT/internal/transactions/$PAYMENT_ID/complete"

echo $PAYMENT_ID

curl -X POST --silent \
  -H "Content-Type: application/json" \
  -H "Agent: $MERCHANT_MEMBER_ID" \
  -H "Test: $SCOPE" \
  $COMPLETE_URL | jq

echo ""






*****************************If pending queue size reaches 10 000
In this case in addition to the above script also please run 



bash /get-descending-transactions-that-can-be-completed.sh | while read LINE;do ./complete-transactions.sh "$LINE";done

$ cat get-descending-transactions-that-can-be-completed.sh
#!/bin/bash

ELASTICSEARCH_API_ROOT=http://elastic.production.paidy.io.internal:9200
KYC_API_ROOT=http://kyc.production-01.internal:8080

# 10000 authenticated payments, ordered descending by created_at
APPLE_AUTHENTICATED_LOOKUP_URL="$ELASTICSEARCH_API_ROOT/paidypayments_v1/paidypayments/_search?size=10000&sort=created_at:desc&q=merchant_id:mer_YB1R3WwohY4AJeYG%20AND%20test:false%20AND%20status:authenticated"
APPLE_AUTHENTICATED_LOOKUP_BODY=$(curl -X GET --silent $APPLE_AUTHENTICATED_LOOKUP_URL)

echo $APPLE_AUTHENTICATED_LOOKUP_BODY | jq --raw-output '.hits.hits[]._source | [ .id, .consumer_id, .created_at, .test ] | @csv' | sed -e s/\"//g | tail -n +1001 | head -n -1000 | while read LINE
do
  PAYMENT_ID=$(echo $LINE | awk -F ',' '{print $1}')
  CONSUMER_ID=$(echo $LINE | awk -F ',' '{print $2}')
  CREATED_AT=$(echo $LINE | awk -F ',' '{print $3}')
  SCOPE=$(echo $LINE | awk -F ',' '{print $4}')

  PAIDY_PLUS_FOR_APPLE_STATUS_LOOKUP_URL="$KYC_API_ROOT/kyc/apple/consumer/$CONSUMER_ID/application/status"
  PAIDY_PLUS_FOR_APPLE_STATUS=$(curl -X GET --silent $PAIDY_PLUS_FOR_APPLE_STATUS_LOOKUP_URL | jq --raw-output '.status')

  if [ "$PAIDY_PLUS_FOR_APPLE_STATUS" == "approved" ] || [ "$PAIDY_PLUS_FOR_APPLE_STATUS" == "rejected" ]
  then
    echo $PAYMENT_ID,$SCOPE,$CREATED_AT,$CONSUMER_ID,$PAIDY_PLUS_FOR_APPLE_STATUS
  fi
done

